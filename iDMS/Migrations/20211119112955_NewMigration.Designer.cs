// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iDMS.Models;

namespace iDMS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211119112955_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("iDMS.Models.Audit.AuditQuestions", b =>
                {
                    b.Property<int>("questionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HealthSafetyId")
                        .HasColumnType("int");

                    b.Property<string>("ansawer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("electricalCableCivilId")
                        .HasColumnType("int");

                    b.Property<int?>("electricalCableTechnicalId")
                        .HasColumnType("int");

                    b.Property<int?>("electricalDistributionId")
                        .HasColumnType("int");

                    b.Property<int?>("electricalJointingId")
                        .HasColumnType("int");

                    b.Property<int?>("environmentalSiteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("equipmentTestingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("gasTechnicalId")
                        .HasColumnType("int");

                    b.Property<string>("qustionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("questionId");

                    b.HasIndex("HealthSafetyId");

                    b.HasIndex("electricalCableCivilId");

                    b.HasIndex("electricalCableTechnicalId");

                    b.HasIndex("electricalDistributionId");

                    b.HasIndex("electricalJointingId");

                    b.HasIndex("environmentalSiteId");

                    b.HasIndex("gasTechnicalId");

                    b.ToTable("AuditQuestions");
                });

            modelBuilder.Entity("iDMS.Models.Audit.ElectricalCableCivilAudit.ElectricalCableCivil", b =>
                {
                    b.Property<int>("electricalCableCivilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfDucting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("auditor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cableLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cableTypeAndSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("closed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateOfAudit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("depthOfBeddingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("depthOfExcavation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("developmentSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("jobRefNo")
                        .HasColumnType("int");

                    b.Property<string>("nonConformance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notesAndObservations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operative1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operative2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("overallCommentsAndAssesment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("targetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("teamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfBeddingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("electricalCableCivilId");

                    b.ToTable("ElectricalCableCivilAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.ElectricalCableTechnical.ElectricalCableTechnical", b =>
                {
                    b.Property<int>("electricalCableTechnicalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("auditor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractSupervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("matesName")
                        .HasColumnType("int");

                    b.Property<string>("monthlyAuditResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectNo")
                        .HasColumnType("int");

                    b.Property<string>("projectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projectmanager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("remedialActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("replyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("sentTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subContractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamLeaderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfAudit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("electricalCableTechnicalId");

                    b.ToTable("ElectricalCableTechnicalAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.ElectricalDistributionAudit.ElectricalDistribution", b =>
                {
                    b.Property<int>("electricalDistributionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("auditor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("closed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateOfAudit")
                        .HasColumnType("datetime2");

                    b.Property<string>("developmentSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nonConformance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operative1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operative2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("overallCommentsAndAssesment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("substationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("substationNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("targetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("teamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("testingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("electricalDistributionId");

                    b.ToTable("ElectricalDistributionAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.ElectricalJointingAudit.ElectricalJointing", b =>
                {
                    b.Property<int>("electricalJointingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("auditor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("closed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateOfAudit")
                        .HasColumnType("datetime2");

                    b.Property<string>("developmentSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nonConformance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operative1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operative2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("overallCommentsAndAssesment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("substationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("substationNo")
                        .HasColumnType("int");

                    b.Property<string>("target")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("electricalJointingId");

                    b.ToTable("ElectricalJointingAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", b =>
                {
                    b.Property<int>("environmentalSiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("additionalComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateClousedOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("immediateActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inspectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("percentageScore")
                        .HasColumnType("int");

                    b.Property<int>("score")
                        .HasColumnType("int");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamOperatives")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unsafeActObserved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleReg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("environmentalSiteId");

                    b.ToTable("EnvironmentalSiteAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.GasTechnicalAudit.GasTechnical", b =>
                {
                    b.Property<int>("gasTechnicalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Auditor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractSupervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("developer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("monthlyAuditResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projectManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectNo")
                        .HasColumnType("int");

                    b.Property<string>("remedialActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("replyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("sentTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfAudit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("gasTechnicalId");

                    b.ToTable("GasTechnicalAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.HealthSafetyAudit.HealthSafety", b =>
                {
                    b.Property<int>("HealthSafetyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("defectFound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locationOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectNo")
                        .HasColumnType("int");

                    b.Property<string>("remedialActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HealthSafetyId");

                    b.ToTable("HealthSafetyAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.AuditQuestions", b =>
                {
                    b.HasOne("iDMS.Models.Audit.HealthSafetyAudit.HealthSafety", null)
                        .WithMany("auditQuestionsLst")
                        .HasForeignKey("HealthSafetyId");

                    b.HasOne("iDMS.Models.Audit.ElectricalCableCivilAudit.ElectricalCableCivil", null)
                        .WithMany("auditQuestionsLst")
                        .HasForeignKey("electricalCableCivilId");

                    b.HasOne("iDMS.Models.Audit.ElectricalCableTechnical.ElectricalCableTechnical", null)
                        .WithMany("auditQuestionsLst")
                        .HasForeignKey("electricalCableTechnicalId");

                    b.HasOne("iDMS.Models.Audit.ElectricalDistributionAudit.ElectricalDistribution", null)
                        .WithMany("auditQuestionsLst")
                        .HasForeignKey("electricalDistributionId");

                    b.HasOne("iDMS.Models.Audit.ElectricalJointingAudit.ElectricalJointing", null)
                        .WithMany("auditQuestionsLst")
                        .HasForeignKey("electricalJointingId");

                    b.HasOne("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", null)
                        .WithMany("auditQuestionsLst")
                        .HasForeignKey("environmentalSiteId");

                    b.HasOne("iDMS.Models.Audit.GasTechnicalAudit.GasTechnical", null)
                        .WithMany("auditQuestionsLst")
                        .HasForeignKey("gasTechnicalId");
                });

            modelBuilder.Entity("iDMS.Models.Audit.ElectricalCableCivilAudit.ElectricalCableCivil", b =>
                {
                    b.Navigation("auditQuestionsLst");
                });

            modelBuilder.Entity("iDMS.Models.Audit.ElectricalCableTechnical.ElectricalCableTechnical", b =>
                {
                    b.Navigation("auditQuestionsLst");
                });

            modelBuilder.Entity("iDMS.Models.Audit.ElectricalDistributionAudit.ElectricalDistribution", b =>
                {
                    b.Navigation("auditQuestionsLst");
                });

            modelBuilder.Entity("iDMS.Models.Audit.ElectricalJointingAudit.ElectricalJointing", b =>
                {
                    b.Navigation("auditQuestionsLst");
                });

            modelBuilder.Entity("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", b =>
                {
                    b.Navigation("auditQuestionsLst");
                });

            modelBuilder.Entity("iDMS.Models.Audit.GasTechnicalAudit.GasTechnical", b =>
                {
                    b.Navigation("auditQuestionsLst");
                });

            modelBuilder.Entity("iDMS.Models.Audit.HealthSafetyAudit.HealthSafety", b =>
                {
                    b.Navigation("auditQuestionsLst");
                });
#pragma warning restore 612, 618
        }
    }
}
