// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iDMS.Models;

namespace iDMS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211117110354_iDMS")]
    partial class iDMS
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("iDMS.Models.Audit.AuditQuestions", b =>
                {
                    b.Property<int>("questionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HealthSafetyId")
                        .HasColumnType("int");

                    b.Property<string>("ansawer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("environmentalSiteId")
                        .HasColumnType("int");

                    b.Property<int?>("environmentalSiteId1")
                        .HasColumnType("int");

                    b.Property<int?>("environmentalSiteId2")
                        .HasColumnType("int");

                    b.Property<int?>("environmentalSiteId3")
                        .HasColumnType("int");

                    b.Property<int?>("environmentalSiteId4")
                        .HasColumnType("int");

                    b.Property<int?>("environmentalSiteId5")
                        .HasColumnType("int");

                    b.Property<string>("qustionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("questionId");

                    b.HasIndex("HealthSafetyId");

                    b.HasIndex("environmentalSiteId");

                    b.HasIndex("environmentalSiteId1");

                    b.HasIndex("environmentalSiteId2");

                    b.HasIndex("environmentalSiteId3");

                    b.HasIndex("environmentalSiteId4");

                    b.HasIndex("environmentalSiteId5");

                    b.ToTable("AuditQuestions");
                });

            modelBuilder.Entity("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", b =>
                {
                    b.Property<int>("environmentalSiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("additionalComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateClousedOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("immediateActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inspectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("percentageScore")
                        .HasColumnType("int");

                    b.Property<int>("score")
                        .HasColumnType("int");

                    b.Property<string>("signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamOperatives")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unsafeActObserved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleReg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("environmentalSiteId");

                    b.ToTable("EnvironmentalSiteAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.HealthSafetyAudit.HealthSafety", b =>
                {
                    b.Property<int>("HealthSafetyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("defectFound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locationOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("projectNo")
                        .HasColumnType("int");

                    b.Property<string>("remedialActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HealthSafetyId");

                    b.ToTable("HealthSafetyAudit");
                });

            modelBuilder.Entity("iDMS.Models.Audit.AuditQuestions", b =>
                {
                    b.HasOne("iDMS.Models.Audit.HealthSafetyAudit.HealthSafety", null)
                        .WithMany("auditQuestionsLst")
                        .HasForeignKey("HealthSafetyId");

                    b.HasOne("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", null)
                        .WithMany("auditQuestionsCOSHHLst")
                        .HasForeignKey("environmentalSiteId");

                    b.HasOne("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", null)
                        .WithMany("auditQuestionsHouseKeeepingLst")
                        .HasForeignKey("environmentalSiteId1");

                    b.HasOne("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", null)
                        .WithMany("auditQuestionsOthersLst")
                        .HasForeignKey("environmentalSiteId2");

                    b.HasOne("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", null)
                        .WithMany("auditQuestionsPlantLst")
                        .HasForeignKey("environmentalSiteId3");

                    b.HasOne("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", null)
                        .WithMany("auditQuestionsSpoilLst")
                        .HasForeignKey("environmentalSiteId4");

                    b.HasOne("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", null)
                        .WithMany("auditQuestionsVehiclesLst")
                        .HasForeignKey("environmentalSiteId5");
                });

            modelBuilder.Entity("iDMS.Models.Audit.EnvironmentalSiteAudit.EnvironmentalSite", b =>
                {
                    b.Navigation("auditQuestionsCOSHHLst");

                    b.Navigation("auditQuestionsHouseKeeepingLst");

                    b.Navigation("auditQuestionsOthersLst");

                    b.Navigation("auditQuestionsPlantLst");

                    b.Navigation("auditQuestionsSpoilLst");

                    b.Navigation("auditQuestionsVehiclesLst");
                });

            modelBuilder.Entity("iDMS.Models.Audit.HealthSafetyAudit.HealthSafety", b =>
                {
                    b.Navigation("auditQuestionsLst");
                });
#pragma warning restore 612, 618
        }
    }
}
